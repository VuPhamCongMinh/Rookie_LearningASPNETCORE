@model IEnumerable<Product>

@{
    ViewData["Title"] = "Guns";
}



<!--================Feature Product Area =================-->
@await Component.InvokeAsync("MostOrderedProduct")
@await Component.InvokeAsync("NewlyAddProduct")
<!--================End Feature Product Area =================-->



<!--================Category Product Area =================-->
<section class="cat_product_area section_padding">
    <div class="container">
        <div class="row">
            <div class="col-lg-3">
                <div class="left_sidebar_area">
                    <aside class="left_widgets p_filter_widgets">
                        <div class="l_w_title text-center">
                            <h3>Categories</h3>
                        </div>
                        <div class="ml-5 widgets_inner">
                            @await Component.InvokeAsync("Category")
                        </div>
                    </aside>

                    <aside class="left_widgets p_filter_widgets">
                        <div class="l_w_title text-center">
                            <h3>Price Filter</h3>
                        </div>
                        <div class="widgets_inner">
                            <div class="d-flex flex-column">
                                <div class="form-group">
                                    <input type="number"
                                           class="single-input"
                                           min-price-input
                                           min="1"
                                           value="@ViewBag.MinPrice"
                                           placeholder="FROM" />
                                </div>
                                <div class="form-group">
                                    <input type="number"
                                           class="single-input"
                                           max-price-input
                                           min="1"
                                           value="@ViewBag.MaxPrice"
                                           placeholder="TO" />
                                </div>
                                <button type="button" filter-btn class="genric-btn primary">Filter</button>
                            </div>
                        </div>
                    </aside>
                </div>
            </div>
            <div class="col-lg-9">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="product_top_bar d-flex justify-content-between align-items-center">
                            <div class="single_product_menu">
                                <p><span id="product-found">@ViewBag.TotalProduct</span> Products Found</p>
                            </div>
                            <div class="single_product_menu d-flex">
                                <h5>Sort By : </h5>
                                <select class="filters">
                                    <option value="asc" selected="@((int)ViewBag.SortOrder == 0 ? "selected" : null)">Price ASC</option>
                                    <option value="desc" selected="@((int)ViewBag.SortOrder == 1 ? "selected" : null)">Price DESC</option>
                                </select>
                            </div>
                            <div class="single_product_menu d-flex">
                                <div class="input-group">
                                    <input type="text"
                                           class="form-control"
                                           search-input
                                           value="@ViewBag.SearchString"
                                           placeholder="Search ..." />
                                    <div class="input-group-append">
                                        <span class="input-group-text" id="inputGroupPrepend">
                                            <i search-btn class="ti-search" style="cursor: pointer;"></i>
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row align-items-center latest_product_inner" id="product-section">
                    @await Component.InvokeAsync("Product", new { products = Model })
                    <div class="col-lg-12">
                        <div class="pageination">
                            <nav aria-label="Page navigation example">
                                <ul class="pagination justify-content-center data-paging">
                                    @for (int i = 1; i <= ViewBag.Pages; i++)
                                    {
                                        <li class="page-item">
                                            <button type="button" paging-btn="@i" class="page-link">@i</button>
                                        </li>
                                    }
                                </ul>
                            </nav>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<!--================End Category Product Area =================-->




@section Scripts {
    <script src="~/js/product/script.js"></script>
    <script src="~/js/category/script.js"></script>
}